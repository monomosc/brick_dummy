// Code generated by protoc-gen-go. DO NOT EDIT.
// source: vapb/va.proto

package vapb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import corepb "brick/grpc/corepb"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ValidationMessage struct {
	Authorization        *corepb.Authorization `protobuf:"bytes,1,opt,name=authorization,proto3" json:"authorization,omitempty"`
	Challenge            *corepb.Challenge     `protobuf:"bytes,2,opt,name=challenge,proto3" json:"challenge,omitempty"`
	AccountJWK           string                `protobuf:"bytes,3,opt,name=accountJWK,proto3" json:"accountJWK,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ValidationMessage) Reset()         { *m = ValidationMessage{} }
func (m *ValidationMessage) String() string { return proto.CompactTextString(m) }
func (*ValidationMessage) ProtoMessage()    {}
func (*ValidationMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_va_782ba0b2e0c17fd3, []int{0}
}
func (m *ValidationMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidationMessage.Unmarshal(m, b)
}
func (m *ValidationMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidationMessage.Marshal(b, m, deterministic)
}
func (dst *ValidationMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidationMessage.Merge(dst, src)
}
func (m *ValidationMessage) XXX_Size() int {
	return xxx_messageInfo_ValidationMessage.Size(m)
}
func (m *ValidationMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidationMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ValidationMessage proto.InternalMessageInfo

func (m *ValidationMessage) GetAuthorization() *corepb.Authorization {
	if m != nil {
		return m.Authorization
	}
	return nil
}

func (m *ValidationMessage) GetChallenge() *corepb.Challenge {
	if m != nil {
		return m.Challenge
	}
	return nil
}

func (m *ValidationMessage) GetAccountJWK() string {
	if m != nil {
		return m.AccountJWK
	}
	return ""
}

func init() {
	proto.RegisterType((*ValidationMessage)(nil), "va.ValidationMessage")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BrickValidationClient is the client API for BrickValidation service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BrickValidationClient interface {
	DoValidate(ctx context.Context, in *ValidationMessage, opts ...grpc.CallOption) (*corepb.Empty, error)
}

type brickValidationClient struct {
	cc *grpc.ClientConn
}

func NewBrickValidationClient(cc *grpc.ClientConn) BrickValidationClient {
	return &brickValidationClient{cc}
}

func (c *brickValidationClient) DoValidate(ctx context.Context, in *ValidationMessage, opts ...grpc.CallOption) (*corepb.Empty, error) {
	out := new(corepb.Empty)
	err := c.cc.Invoke(ctx, "/va.BrickValidation/DoValidate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BrickValidationServer is the server API for BrickValidation service.
type BrickValidationServer interface {
	DoValidate(context.Context, *ValidationMessage) (*corepb.Empty, error)
}

func RegisterBrickValidationServer(s *grpc.Server, srv BrickValidationServer) {
	s.RegisterService(&_BrickValidation_serviceDesc, srv)
}

func _BrickValidation_DoValidate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ValidationMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BrickValidationServer).DoValidate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/va.BrickValidation/DoValidate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BrickValidationServer).DoValidate(ctx, req.(*ValidationMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _BrickValidation_serviceDesc = grpc.ServiceDesc{
	ServiceName: "va.BrickValidation",
	HandlerType: (*BrickValidationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DoValidate",
			Handler:    _BrickValidation_DoValidate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "vapb/va.proto",
}

func init() { proto.RegisterFile("vapb/va.proto", fileDescriptor_va_782ba0b2e0c17fd3) }

var fileDescriptor_va_782ba0b2e0c17fd3 = []byte{
	// 228 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2d, 0x4b, 0x2c, 0x48,
	0xd2, 0x2f, 0x4b, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a, 0x4b, 0x94, 0x12, 0x4c,
	0xce, 0x2f, 0x4a, 0x2d, 0x48, 0xd2, 0x07, 0x51, 0x10, 0x61, 0xa5, 0xb9, 0x8c, 0x5c, 0x82, 0x61,
	0x89, 0x39, 0x99, 0x29, 0x89, 0x25, 0x99, 0xf9, 0x79, 0xbe, 0xa9, 0xc5, 0xc5, 0x89, 0xe9, 0xa9,
	0x42, 0x96, 0x5c, 0xbc, 0x89, 0xa5, 0x25, 0x19, 0xf9, 0x45, 0x99, 0x55, 0x60, 0x71, 0x09, 0x46,
	0x05, 0x46, 0x0d, 0x6e, 0x23, 0x61, 0x3d, 0xb0, 0x4e, 0x47, 0x64, 0xa9, 0x20, 0x54, 0x95, 0x42,
	0xba, 0x5c, 0x9c, 0xc9, 0x19, 0x89, 0x39, 0x39, 0xa9, 0x79, 0xe9, 0xa9, 0x12, 0x4c, 0x60, 0x6d,
	0xfc, 0x10, 0x6d, 0xce, 0x30, 0xe1, 0x20, 0x84, 0x0a, 0x21, 0x39, 0x2e, 0xae, 0xc4, 0xe4, 0xe4,
	0xfc, 0xd2, 0xbc, 0x12, 0xaf, 0x70, 0x6f, 0x09, 0x66, 0x05, 0x46, 0x0d, 0xce, 0x20, 0x24, 0x11,
	0x23, 0x57, 0x2e, 0x7e, 0xa7, 0xa2, 0xcc, 0xe4, 0x6c, 0x84, 0x1b, 0x85, 0x8c, 0xb8, 0xb8, 0x5c,
	0xf2, 0xa1, 0xfc, 0x54, 0x21, 0x51, 0xbd, 0xb2, 0x44, 0x3d, 0x0c, 0x1f, 0x48, 0x71, 0x43, 0xec,
	0x74, 0xcd, 0x2d, 0x28, 0xa9, 0x54, 0x62, 0x70, 0x52, 0x89, 0x62, 0x01, 0x05, 0xc7, 0x2a, 0x26,
	0x69, 0xb0, 0x69, 0x7a, 0x61, 0xa9, 0x45, 0x99, 0x69, 0x99, 0xc9, 0x60, 0x2d, 0x50, 0xef, 0x94,
	0x54, 0x26, 0xb1, 0x81, 0xc3, 0xc4, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x17, 0xdd, 0xb0, 0xdd,
	0x3b, 0x01, 0x00, 0x00,
}
